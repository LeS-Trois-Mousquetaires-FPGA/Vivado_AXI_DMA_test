// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doGain_doGain,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.977000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1320,HLS_SYN_LUT=1086,HLS_VERSION=2022_2_2}" *)

module doGain (
        ap_clk,
        ap_rst_n,
        inStream_TVALID,
        outStream_TREADY,
        inStream_TDATA,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input   inStream_TVALID;
input   outStream_TREADY;
input  [31:0] inStream_TDATA;
output   inStream_TREADY;
input  [3:0] inStream_TKEEP;
input  [3:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [31:0] outStream_TDATA;
output   outStream_TVALID;
output  [3:0] outStream_TKEEP;
output  [3:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_86_p9;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    regslice_both_outStream_V_data_V_U_apdone_blk;
reg    ap_block_state33_pp0_stage0_iter32;
reg    ap_enable_reg_pp0_iter32;
reg    ap_block_state34_pp0_stage0_iter33;
reg    ap_enable_reg_pp0_iter33;
wire    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    inStream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    outStream_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] tmp_keep_V_reg_303;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter1_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter2_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter3_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter4_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter5_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter6_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter7_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter8_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter9_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter10_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter11_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter12_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter13_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter14_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter15_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter16_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter17_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter18_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter19_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter20_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter21_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter22_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter23_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter24_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter25_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter26_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter27_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter28_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter29_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter30_reg;
reg   [3:0] tmp_keep_V_reg_303_pp0_iter31_reg;
reg   [3:0] tmp_strb_V_reg_308;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter1_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter2_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter3_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter4_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter5_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter6_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter7_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter8_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter9_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter10_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter11_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter12_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter13_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter14_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter15_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter16_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter17_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter18_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter19_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter20_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter21_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter22_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter23_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter24_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter25_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter26_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter27_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter28_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter29_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter30_reg;
reg   [3:0] tmp_strb_V_reg_308_pp0_iter31_reg;
reg   [1:0] tmp_user_V_reg_313;
reg   [1:0] tmp_user_V_reg_313_pp0_iter1_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter2_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter3_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter4_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter5_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter6_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter7_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter8_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter9_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter10_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter11_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter12_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter13_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter14_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter15_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter16_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter17_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter18_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter19_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter20_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter21_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter22_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter23_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter24_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter25_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter26_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter27_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter28_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter29_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter30_reg;
reg   [1:0] tmp_user_V_reg_313_pp0_iter31_reg;
reg   [0:0] tmp_last_V_reg_318;
reg   [0:0] tmp_last_V_reg_318_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter3_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter4_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter5_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter6_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter7_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter8_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter9_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter10_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter11_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter12_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter13_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter14_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter15_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter16_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter17_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter18_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter19_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter20_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter21_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter22_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter23_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter24_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter25_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter26_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter27_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter28_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter29_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter30_reg;
reg   [0:0] tmp_last_V_reg_318_pp0_iter31_reg;
reg   [4:0] tmp_id_V_reg_323;
reg   [4:0] tmp_id_V_reg_323_pp0_iter1_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter2_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter3_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter4_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter5_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter6_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter7_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter8_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter9_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter10_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter11_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter12_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter13_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter14_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter15_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter16_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter17_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter18_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter19_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter20_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter21_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter22_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter23_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter24_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter25_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter26_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter27_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter28_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter29_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter30_reg;
reg   [4:0] tmp_id_V_reg_323_pp0_iter31_reg;
reg   [5:0] tmp_dest_V_reg_328;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter1_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter2_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter3_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter4_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter5_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter6_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter7_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter8_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter9_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter10_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter11_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter12_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter13_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter14_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter15_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter16_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter17_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter18_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter19_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter20_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter21_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter22_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter23_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter24_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter25_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter26_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter27_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter28_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter29_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter30_reg;
reg   [5:0] tmp_dest_V_reg_328_pp0_iter31_reg;
wire   [63:0] grp_fu_152_p1;
reg   [63:0] conv_reg_338;
wire   [63:0] grp_fu_165_p2;
reg   [63:0] mul_reg_343;
wire   [31:0] grp_fu_149_p1;
reg   [31:0] valOut_data_reg_348;
reg   [31:0] valOut_data_reg_348_pp0_iter23_reg;
reg   [31:0] valOut_data_reg_348_pp0_iter24_reg;
reg   [31:0] valOut_data_reg_348_pp0_iter25_reg;
reg   [31:0] valOut_data_reg_348_pp0_iter26_reg;
wire   [0:0] grp_fu_155_p2;
reg   [0:0] tmp_2_reg_355;
wire   [31:0] valOut_data_1_fu_243_p3;
reg   [31:0] valOut_data_1_reg_360;
reg   [31:0] valOut_data_1_reg_360_pp0_iter28_reg;
reg   [31:0] valOut_data_1_reg_360_pp0_iter29_reg;
reg   [31:0] valOut_data_1_reg_360_pp0_iter30_reg;
reg   [31:0] valOut_data_1_reg_360_pp0_iter31_reg;
wire   [0:0] grp_fu_160_p2;
reg   [0:0] tmp_4_reg_366;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_152_p0;
wire   [31:0] bitcast_ln16_fu_203_p1;
wire   [7:0] tmp_1_fu_206_p4;
wire   [22:0] trunc_ln16_fu_216_p1;
wire   [0:0] icmp_ln16_1_fu_226_p2;
wire   [0:0] icmp_ln16_fu_220_p2;
wire   [0:0] or_ln16_fu_232_p2;
wire   [0:0] and_ln16_fu_238_p2;
wire   [31:0] bitcast_ln17_fu_250_p1;
wire   [7:0] tmp_3_fu_253_p4;
wire   [22:0] trunc_ln17_fu_263_p1;
wire   [0:0] icmp_ln17_1_fu_273_p2;
wire   [0:0] icmp_ln17_fu_267_p2;
wire   [0:0] or_ln17_fu_279_p2;
wire   [0:0] and_ln17_fu_285_p2;
reg    grp_fu_149_ce;
reg    grp_fu_152_ce;
reg    grp_fu_155_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_160_ce;
reg    grp_fu_165_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready;
wire    ap_done;
wire    ap_continue_int;
wire    ap_loop_init;
wire    regslice_both_inStream_V_data_V_U_apdone_blk;
wire   [31:0] inStream_TDATA_int_regslice;
wire    inStream_TVALID_int_regslice;
reg    inStream_TREADY_int_regslice;
wire    regslice_both_inStream_V_data_V_U_ack_in;
wire    regslice_both_inStream_V_keep_V_U_apdone_blk;
wire   [3:0] inStream_TKEEP_int_regslice;
wire    regslice_both_inStream_V_keep_V_U_vld_out;
wire    regslice_both_inStream_V_keep_V_U_ack_in;
wire    regslice_both_inStream_V_strb_V_U_apdone_blk;
wire   [3:0] inStream_TSTRB_int_regslice;
wire    regslice_both_inStream_V_strb_V_U_vld_out;
wire    regslice_both_inStream_V_strb_V_U_ack_in;
wire    regslice_both_inStream_V_user_V_U_apdone_blk;
wire   [1:0] inStream_TUSER_int_regslice;
wire    regslice_both_inStream_V_user_V_U_vld_out;
wire    regslice_both_inStream_V_user_V_U_ack_in;
wire    regslice_both_inStream_V_last_V_U_apdone_blk;
wire   [0:0] inStream_TLAST_int_regslice;
wire    regslice_both_inStream_V_last_V_U_vld_out;
wire    regslice_both_inStream_V_last_V_U_ack_in;
wire    regslice_both_inStream_V_id_V_U_apdone_blk;
wire   [4:0] inStream_TID_int_regslice;
wire    regslice_both_inStream_V_id_V_U_vld_out;
wire    regslice_both_inStream_V_id_V_U_ack_in;
wire    regslice_both_inStream_V_dest_V_U_apdone_blk;
wire   [5:0] inStream_TDEST_int_regslice;
wire    regslice_both_inStream_V_dest_V_U_vld_out;
wire    regslice_both_inStream_V_dest_V_U_ack_in;
wire   [31:0] outStream_TDATA_int_regslice;
reg    outStream_TVALID_int_regslice;
wire    outStream_TREADY_int_regslice;
wire    regslice_both_outStream_V_data_V_U_vld_out;
wire    regslice_both_outStream_V_keep_V_U_apdone_blk;
wire    regslice_both_outStream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_keep_V_U_vld_out;
wire    regslice_both_outStream_V_strb_V_U_apdone_blk;
wire    regslice_both_outStream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_strb_V_U_vld_out;
wire    regslice_both_outStream_V_user_V_U_apdone_blk;
wire    regslice_both_outStream_V_user_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_user_V_U_vld_out;
wire    regslice_both_outStream_V_last_V_U_apdone_blk;
wire    regslice_both_outStream_V_last_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_last_V_U_vld_out;
wire    regslice_both_outStream_V_id_V_U_apdone_blk;
wire    regslice_both_outStream_V_id_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_id_V_U_vld_out;
wire    regslice_both_outStream_V_dest_V_U_apdone_blk;
wire    regslice_both_outStream_V_dest_V_U_ack_in_dummy;
wire    regslice_both_outStream_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
end

doGain_fptrunc_64ns_32_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_5_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_reg_343),
    .ce(grp_fu_149_ce),
    .dout(grp_fu_149_p1)
);

doGain_fpext_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_4_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_152_p0),
    .ce(grp_fu_152_ce),
    .dout(grp_fu_152_p1)
);

doGain_fcmp_32ns_32ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_4_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(valOut_data_reg_348),
    .din1(32'd1065353216),
    .ce(grp_fu_155_ce),
    .opcode(5'd2),
    .dout(grp_fu_155_p2)
);

doGain_fcmp_32ns_32ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_4_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(valOut_data_1_reg_360),
    .din1(32'd3212836864),
    .ce(grp_fu_160_ce),
    .opcode(5'd4),
    .dout(grp_fu_160_p2)
);

doGain_dmul_64ns_64ns_64_14_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_14_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_reg_338),
    .din1(64'd4608083138725491507),
    .ce(grp_fu_165_ce),
    .dout(grp_fu_165_p2)
);

doGain_flow_control_loop_pipe_no_ap_cont flow_control_loop_pipe_no_ap_cont_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(1'b1),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(1'b0),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(1'b0)
);

doGain_regslice_both #(
    .DataWidth( 32 ))
regslice_both_inStream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TDATA),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_data_V_U_ack_in),
    .data_out(inStream_TDATA_int_regslice),
    .vld_out(inStream_TVALID_int_regslice),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_data_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 4 ))
regslice_both_inStream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TKEEP),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_keep_V_U_ack_in),
    .data_out(inStream_TKEEP_int_regslice),
    .vld_out(regslice_both_inStream_V_keep_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_keep_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 4 ))
regslice_both_inStream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TSTRB),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_strb_V_U_ack_in),
    .data_out(inStream_TSTRB_int_regslice),
    .vld_out(regslice_both_inStream_V_strb_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_strb_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 2 ))
regslice_both_inStream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TUSER),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_user_V_U_ack_in),
    .data_out(inStream_TUSER_int_regslice),
    .vld_out(regslice_both_inStream_V_user_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_user_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 1 ))
regslice_both_inStream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TLAST),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_last_V_U_ack_in),
    .data_out(inStream_TLAST_int_regslice),
    .vld_out(regslice_both_inStream_V_last_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_last_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 5 ))
regslice_both_inStream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TID),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_id_V_U_ack_in),
    .data_out(inStream_TID_int_regslice),
    .vld_out(regslice_both_inStream_V_id_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_id_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 6 ))
regslice_both_inStream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inStream_TDEST),
    .vld_in(inStream_TVALID),
    .ack_in(regslice_both_inStream_V_dest_V_U_ack_in),
    .data_out(inStream_TDEST_int_regslice),
    .vld_out(regslice_both_inStream_V_dest_V_U_vld_out),
    .ack_out(inStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_inStream_V_dest_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 32 ))
regslice_both_outStream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outStream_TDATA_int_regslice),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(outStream_TREADY_int_regslice),
    .data_out(outStream_TDATA),
    .vld_out(regslice_both_outStream_V_data_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_data_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_303_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_keep_V_U_ack_in_dummy),
    .data_out(outStream_TKEEP),
    .vld_out(regslice_both_outStream_V_keep_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_keep_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 4 ))
regslice_both_outStream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_308_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_strb_V_U_ack_in_dummy),
    .data_out(outStream_TSTRB),
    .vld_out(regslice_both_outStream_V_strb_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_strb_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 2 ))
regslice_both_outStream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_313_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_user_V_U_ack_in_dummy),
    .data_out(outStream_TUSER),
    .vld_out(regslice_both_outStream_V_user_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_user_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outStream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_318_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_last_V_U_ack_in_dummy),
    .data_out(outStream_TLAST),
    .vld_out(regslice_both_outStream_V_last_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_last_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 5 ))
regslice_both_outStream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_id_V_reg_323_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_id_V_U_ack_in_dummy),
    .data_out(outStream_TID),
    .vld_out(regslice_both_outStream_V_id_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_id_V_U_apdone_blk)
);

doGain_regslice_both #(
    .DataWidth( 6 ))
regslice_both_outStream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_dest_V_reg_328_pp0_iter31_reg),
    .vld_in(outStream_TVALID_int_regslice),
    .ack_in(regslice_both_outStream_V_dest_V_U_ack_in_dummy),
    .data_out(outStream_TDEST),
    .vld_out(regslice_both_outStream_V_dest_V_U_vld_out),
    .ack_out(outStream_TREADY),
    .apdone_blk(regslice_both_outStream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        conv_reg_338 <= grp_fu_152_p1;
        mul_reg_343 <= grp_fu_165_p2;
        tmp_2_reg_355 <= grp_fu_155_p2;
        tmp_4_reg_366 <= grp_fu_160_p2;
        tmp_dest_V_reg_328_pp0_iter10_reg <= tmp_dest_V_reg_328_pp0_iter9_reg;
        tmp_dest_V_reg_328_pp0_iter11_reg <= tmp_dest_V_reg_328_pp0_iter10_reg;
        tmp_dest_V_reg_328_pp0_iter12_reg <= tmp_dest_V_reg_328_pp0_iter11_reg;
        tmp_dest_V_reg_328_pp0_iter13_reg <= tmp_dest_V_reg_328_pp0_iter12_reg;
        tmp_dest_V_reg_328_pp0_iter14_reg <= tmp_dest_V_reg_328_pp0_iter13_reg;
        tmp_dest_V_reg_328_pp0_iter15_reg <= tmp_dest_V_reg_328_pp0_iter14_reg;
        tmp_dest_V_reg_328_pp0_iter16_reg <= tmp_dest_V_reg_328_pp0_iter15_reg;
        tmp_dest_V_reg_328_pp0_iter17_reg <= tmp_dest_V_reg_328_pp0_iter16_reg;
        tmp_dest_V_reg_328_pp0_iter18_reg <= tmp_dest_V_reg_328_pp0_iter17_reg;
        tmp_dest_V_reg_328_pp0_iter19_reg <= tmp_dest_V_reg_328_pp0_iter18_reg;
        tmp_dest_V_reg_328_pp0_iter20_reg <= tmp_dest_V_reg_328_pp0_iter19_reg;
        tmp_dest_V_reg_328_pp0_iter21_reg <= tmp_dest_V_reg_328_pp0_iter20_reg;
        tmp_dest_V_reg_328_pp0_iter22_reg <= tmp_dest_V_reg_328_pp0_iter21_reg;
        tmp_dest_V_reg_328_pp0_iter23_reg <= tmp_dest_V_reg_328_pp0_iter22_reg;
        tmp_dest_V_reg_328_pp0_iter24_reg <= tmp_dest_V_reg_328_pp0_iter23_reg;
        tmp_dest_V_reg_328_pp0_iter25_reg <= tmp_dest_V_reg_328_pp0_iter24_reg;
        tmp_dest_V_reg_328_pp0_iter26_reg <= tmp_dest_V_reg_328_pp0_iter25_reg;
        tmp_dest_V_reg_328_pp0_iter27_reg <= tmp_dest_V_reg_328_pp0_iter26_reg;
        tmp_dest_V_reg_328_pp0_iter28_reg <= tmp_dest_V_reg_328_pp0_iter27_reg;
        tmp_dest_V_reg_328_pp0_iter29_reg <= tmp_dest_V_reg_328_pp0_iter28_reg;
        tmp_dest_V_reg_328_pp0_iter2_reg <= tmp_dest_V_reg_328_pp0_iter1_reg;
        tmp_dest_V_reg_328_pp0_iter30_reg <= tmp_dest_V_reg_328_pp0_iter29_reg;
        tmp_dest_V_reg_328_pp0_iter31_reg <= tmp_dest_V_reg_328_pp0_iter30_reg;
        tmp_dest_V_reg_328_pp0_iter3_reg <= tmp_dest_V_reg_328_pp0_iter2_reg;
        tmp_dest_V_reg_328_pp0_iter4_reg <= tmp_dest_V_reg_328_pp0_iter3_reg;
        tmp_dest_V_reg_328_pp0_iter5_reg <= tmp_dest_V_reg_328_pp0_iter4_reg;
        tmp_dest_V_reg_328_pp0_iter6_reg <= tmp_dest_V_reg_328_pp0_iter5_reg;
        tmp_dest_V_reg_328_pp0_iter7_reg <= tmp_dest_V_reg_328_pp0_iter6_reg;
        tmp_dest_V_reg_328_pp0_iter8_reg <= tmp_dest_V_reg_328_pp0_iter7_reg;
        tmp_dest_V_reg_328_pp0_iter9_reg <= tmp_dest_V_reg_328_pp0_iter8_reg;
        tmp_id_V_reg_323_pp0_iter10_reg <= tmp_id_V_reg_323_pp0_iter9_reg;
        tmp_id_V_reg_323_pp0_iter11_reg <= tmp_id_V_reg_323_pp0_iter10_reg;
        tmp_id_V_reg_323_pp0_iter12_reg <= tmp_id_V_reg_323_pp0_iter11_reg;
        tmp_id_V_reg_323_pp0_iter13_reg <= tmp_id_V_reg_323_pp0_iter12_reg;
        tmp_id_V_reg_323_pp0_iter14_reg <= tmp_id_V_reg_323_pp0_iter13_reg;
        tmp_id_V_reg_323_pp0_iter15_reg <= tmp_id_V_reg_323_pp0_iter14_reg;
        tmp_id_V_reg_323_pp0_iter16_reg <= tmp_id_V_reg_323_pp0_iter15_reg;
        tmp_id_V_reg_323_pp0_iter17_reg <= tmp_id_V_reg_323_pp0_iter16_reg;
        tmp_id_V_reg_323_pp0_iter18_reg <= tmp_id_V_reg_323_pp0_iter17_reg;
        tmp_id_V_reg_323_pp0_iter19_reg <= tmp_id_V_reg_323_pp0_iter18_reg;
        tmp_id_V_reg_323_pp0_iter20_reg <= tmp_id_V_reg_323_pp0_iter19_reg;
        tmp_id_V_reg_323_pp0_iter21_reg <= tmp_id_V_reg_323_pp0_iter20_reg;
        tmp_id_V_reg_323_pp0_iter22_reg <= tmp_id_V_reg_323_pp0_iter21_reg;
        tmp_id_V_reg_323_pp0_iter23_reg <= tmp_id_V_reg_323_pp0_iter22_reg;
        tmp_id_V_reg_323_pp0_iter24_reg <= tmp_id_V_reg_323_pp0_iter23_reg;
        tmp_id_V_reg_323_pp0_iter25_reg <= tmp_id_V_reg_323_pp0_iter24_reg;
        tmp_id_V_reg_323_pp0_iter26_reg <= tmp_id_V_reg_323_pp0_iter25_reg;
        tmp_id_V_reg_323_pp0_iter27_reg <= tmp_id_V_reg_323_pp0_iter26_reg;
        tmp_id_V_reg_323_pp0_iter28_reg <= tmp_id_V_reg_323_pp0_iter27_reg;
        tmp_id_V_reg_323_pp0_iter29_reg <= tmp_id_V_reg_323_pp0_iter28_reg;
        tmp_id_V_reg_323_pp0_iter2_reg <= tmp_id_V_reg_323_pp0_iter1_reg;
        tmp_id_V_reg_323_pp0_iter30_reg <= tmp_id_V_reg_323_pp0_iter29_reg;
        tmp_id_V_reg_323_pp0_iter31_reg <= tmp_id_V_reg_323_pp0_iter30_reg;
        tmp_id_V_reg_323_pp0_iter3_reg <= tmp_id_V_reg_323_pp0_iter2_reg;
        tmp_id_V_reg_323_pp0_iter4_reg <= tmp_id_V_reg_323_pp0_iter3_reg;
        tmp_id_V_reg_323_pp0_iter5_reg <= tmp_id_V_reg_323_pp0_iter4_reg;
        tmp_id_V_reg_323_pp0_iter6_reg <= tmp_id_V_reg_323_pp0_iter5_reg;
        tmp_id_V_reg_323_pp0_iter7_reg <= tmp_id_V_reg_323_pp0_iter6_reg;
        tmp_id_V_reg_323_pp0_iter8_reg <= tmp_id_V_reg_323_pp0_iter7_reg;
        tmp_id_V_reg_323_pp0_iter9_reg <= tmp_id_V_reg_323_pp0_iter8_reg;
        tmp_keep_V_reg_303_pp0_iter10_reg <= tmp_keep_V_reg_303_pp0_iter9_reg;
        tmp_keep_V_reg_303_pp0_iter11_reg <= tmp_keep_V_reg_303_pp0_iter10_reg;
        tmp_keep_V_reg_303_pp0_iter12_reg <= tmp_keep_V_reg_303_pp0_iter11_reg;
        tmp_keep_V_reg_303_pp0_iter13_reg <= tmp_keep_V_reg_303_pp0_iter12_reg;
        tmp_keep_V_reg_303_pp0_iter14_reg <= tmp_keep_V_reg_303_pp0_iter13_reg;
        tmp_keep_V_reg_303_pp0_iter15_reg <= tmp_keep_V_reg_303_pp0_iter14_reg;
        tmp_keep_V_reg_303_pp0_iter16_reg <= tmp_keep_V_reg_303_pp0_iter15_reg;
        tmp_keep_V_reg_303_pp0_iter17_reg <= tmp_keep_V_reg_303_pp0_iter16_reg;
        tmp_keep_V_reg_303_pp0_iter18_reg <= tmp_keep_V_reg_303_pp0_iter17_reg;
        tmp_keep_V_reg_303_pp0_iter19_reg <= tmp_keep_V_reg_303_pp0_iter18_reg;
        tmp_keep_V_reg_303_pp0_iter20_reg <= tmp_keep_V_reg_303_pp0_iter19_reg;
        tmp_keep_V_reg_303_pp0_iter21_reg <= tmp_keep_V_reg_303_pp0_iter20_reg;
        tmp_keep_V_reg_303_pp0_iter22_reg <= tmp_keep_V_reg_303_pp0_iter21_reg;
        tmp_keep_V_reg_303_pp0_iter23_reg <= tmp_keep_V_reg_303_pp0_iter22_reg;
        tmp_keep_V_reg_303_pp0_iter24_reg <= tmp_keep_V_reg_303_pp0_iter23_reg;
        tmp_keep_V_reg_303_pp0_iter25_reg <= tmp_keep_V_reg_303_pp0_iter24_reg;
        tmp_keep_V_reg_303_pp0_iter26_reg <= tmp_keep_V_reg_303_pp0_iter25_reg;
        tmp_keep_V_reg_303_pp0_iter27_reg <= tmp_keep_V_reg_303_pp0_iter26_reg;
        tmp_keep_V_reg_303_pp0_iter28_reg <= tmp_keep_V_reg_303_pp0_iter27_reg;
        tmp_keep_V_reg_303_pp0_iter29_reg <= tmp_keep_V_reg_303_pp0_iter28_reg;
        tmp_keep_V_reg_303_pp0_iter2_reg <= tmp_keep_V_reg_303_pp0_iter1_reg;
        tmp_keep_V_reg_303_pp0_iter30_reg <= tmp_keep_V_reg_303_pp0_iter29_reg;
        tmp_keep_V_reg_303_pp0_iter31_reg <= tmp_keep_V_reg_303_pp0_iter30_reg;
        tmp_keep_V_reg_303_pp0_iter3_reg <= tmp_keep_V_reg_303_pp0_iter2_reg;
        tmp_keep_V_reg_303_pp0_iter4_reg <= tmp_keep_V_reg_303_pp0_iter3_reg;
        tmp_keep_V_reg_303_pp0_iter5_reg <= tmp_keep_V_reg_303_pp0_iter4_reg;
        tmp_keep_V_reg_303_pp0_iter6_reg <= tmp_keep_V_reg_303_pp0_iter5_reg;
        tmp_keep_V_reg_303_pp0_iter7_reg <= tmp_keep_V_reg_303_pp0_iter6_reg;
        tmp_keep_V_reg_303_pp0_iter8_reg <= tmp_keep_V_reg_303_pp0_iter7_reg;
        tmp_keep_V_reg_303_pp0_iter9_reg <= tmp_keep_V_reg_303_pp0_iter8_reg;
        tmp_last_V_reg_318_pp0_iter10_reg <= tmp_last_V_reg_318_pp0_iter9_reg;
        tmp_last_V_reg_318_pp0_iter11_reg <= tmp_last_V_reg_318_pp0_iter10_reg;
        tmp_last_V_reg_318_pp0_iter12_reg <= tmp_last_V_reg_318_pp0_iter11_reg;
        tmp_last_V_reg_318_pp0_iter13_reg <= tmp_last_V_reg_318_pp0_iter12_reg;
        tmp_last_V_reg_318_pp0_iter14_reg <= tmp_last_V_reg_318_pp0_iter13_reg;
        tmp_last_V_reg_318_pp0_iter15_reg <= tmp_last_V_reg_318_pp0_iter14_reg;
        tmp_last_V_reg_318_pp0_iter16_reg <= tmp_last_V_reg_318_pp0_iter15_reg;
        tmp_last_V_reg_318_pp0_iter17_reg <= tmp_last_V_reg_318_pp0_iter16_reg;
        tmp_last_V_reg_318_pp0_iter18_reg <= tmp_last_V_reg_318_pp0_iter17_reg;
        tmp_last_V_reg_318_pp0_iter19_reg <= tmp_last_V_reg_318_pp0_iter18_reg;
        tmp_last_V_reg_318_pp0_iter20_reg <= tmp_last_V_reg_318_pp0_iter19_reg;
        tmp_last_V_reg_318_pp0_iter21_reg <= tmp_last_V_reg_318_pp0_iter20_reg;
        tmp_last_V_reg_318_pp0_iter22_reg <= tmp_last_V_reg_318_pp0_iter21_reg;
        tmp_last_V_reg_318_pp0_iter23_reg <= tmp_last_V_reg_318_pp0_iter22_reg;
        tmp_last_V_reg_318_pp0_iter24_reg <= tmp_last_V_reg_318_pp0_iter23_reg;
        tmp_last_V_reg_318_pp0_iter25_reg <= tmp_last_V_reg_318_pp0_iter24_reg;
        tmp_last_V_reg_318_pp0_iter26_reg <= tmp_last_V_reg_318_pp0_iter25_reg;
        tmp_last_V_reg_318_pp0_iter27_reg <= tmp_last_V_reg_318_pp0_iter26_reg;
        tmp_last_V_reg_318_pp0_iter28_reg <= tmp_last_V_reg_318_pp0_iter27_reg;
        tmp_last_V_reg_318_pp0_iter29_reg <= tmp_last_V_reg_318_pp0_iter28_reg;
        tmp_last_V_reg_318_pp0_iter2_reg <= tmp_last_V_reg_318_pp0_iter1_reg;
        tmp_last_V_reg_318_pp0_iter30_reg <= tmp_last_V_reg_318_pp0_iter29_reg;
        tmp_last_V_reg_318_pp0_iter31_reg <= tmp_last_V_reg_318_pp0_iter30_reg;
        tmp_last_V_reg_318_pp0_iter3_reg <= tmp_last_V_reg_318_pp0_iter2_reg;
        tmp_last_V_reg_318_pp0_iter4_reg <= tmp_last_V_reg_318_pp0_iter3_reg;
        tmp_last_V_reg_318_pp0_iter5_reg <= tmp_last_V_reg_318_pp0_iter4_reg;
        tmp_last_V_reg_318_pp0_iter6_reg <= tmp_last_V_reg_318_pp0_iter5_reg;
        tmp_last_V_reg_318_pp0_iter7_reg <= tmp_last_V_reg_318_pp0_iter6_reg;
        tmp_last_V_reg_318_pp0_iter8_reg <= tmp_last_V_reg_318_pp0_iter7_reg;
        tmp_last_V_reg_318_pp0_iter9_reg <= tmp_last_V_reg_318_pp0_iter8_reg;
        tmp_strb_V_reg_308_pp0_iter10_reg <= tmp_strb_V_reg_308_pp0_iter9_reg;
        tmp_strb_V_reg_308_pp0_iter11_reg <= tmp_strb_V_reg_308_pp0_iter10_reg;
        tmp_strb_V_reg_308_pp0_iter12_reg <= tmp_strb_V_reg_308_pp0_iter11_reg;
        tmp_strb_V_reg_308_pp0_iter13_reg <= tmp_strb_V_reg_308_pp0_iter12_reg;
        tmp_strb_V_reg_308_pp0_iter14_reg <= tmp_strb_V_reg_308_pp0_iter13_reg;
        tmp_strb_V_reg_308_pp0_iter15_reg <= tmp_strb_V_reg_308_pp0_iter14_reg;
        tmp_strb_V_reg_308_pp0_iter16_reg <= tmp_strb_V_reg_308_pp0_iter15_reg;
        tmp_strb_V_reg_308_pp0_iter17_reg <= tmp_strb_V_reg_308_pp0_iter16_reg;
        tmp_strb_V_reg_308_pp0_iter18_reg <= tmp_strb_V_reg_308_pp0_iter17_reg;
        tmp_strb_V_reg_308_pp0_iter19_reg <= tmp_strb_V_reg_308_pp0_iter18_reg;
        tmp_strb_V_reg_308_pp0_iter20_reg <= tmp_strb_V_reg_308_pp0_iter19_reg;
        tmp_strb_V_reg_308_pp0_iter21_reg <= tmp_strb_V_reg_308_pp0_iter20_reg;
        tmp_strb_V_reg_308_pp0_iter22_reg <= tmp_strb_V_reg_308_pp0_iter21_reg;
        tmp_strb_V_reg_308_pp0_iter23_reg <= tmp_strb_V_reg_308_pp0_iter22_reg;
        tmp_strb_V_reg_308_pp0_iter24_reg <= tmp_strb_V_reg_308_pp0_iter23_reg;
        tmp_strb_V_reg_308_pp0_iter25_reg <= tmp_strb_V_reg_308_pp0_iter24_reg;
        tmp_strb_V_reg_308_pp0_iter26_reg <= tmp_strb_V_reg_308_pp0_iter25_reg;
        tmp_strb_V_reg_308_pp0_iter27_reg <= tmp_strb_V_reg_308_pp0_iter26_reg;
        tmp_strb_V_reg_308_pp0_iter28_reg <= tmp_strb_V_reg_308_pp0_iter27_reg;
        tmp_strb_V_reg_308_pp0_iter29_reg <= tmp_strb_V_reg_308_pp0_iter28_reg;
        tmp_strb_V_reg_308_pp0_iter2_reg <= tmp_strb_V_reg_308_pp0_iter1_reg;
        tmp_strb_V_reg_308_pp0_iter30_reg <= tmp_strb_V_reg_308_pp0_iter29_reg;
        tmp_strb_V_reg_308_pp0_iter31_reg <= tmp_strb_V_reg_308_pp0_iter30_reg;
        tmp_strb_V_reg_308_pp0_iter3_reg <= tmp_strb_V_reg_308_pp0_iter2_reg;
        tmp_strb_V_reg_308_pp0_iter4_reg <= tmp_strb_V_reg_308_pp0_iter3_reg;
        tmp_strb_V_reg_308_pp0_iter5_reg <= tmp_strb_V_reg_308_pp0_iter4_reg;
        tmp_strb_V_reg_308_pp0_iter6_reg <= tmp_strb_V_reg_308_pp0_iter5_reg;
        tmp_strb_V_reg_308_pp0_iter7_reg <= tmp_strb_V_reg_308_pp0_iter6_reg;
        tmp_strb_V_reg_308_pp0_iter8_reg <= tmp_strb_V_reg_308_pp0_iter7_reg;
        tmp_strb_V_reg_308_pp0_iter9_reg <= tmp_strb_V_reg_308_pp0_iter8_reg;
        tmp_user_V_reg_313_pp0_iter10_reg <= tmp_user_V_reg_313_pp0_iter9_reg;
        tmp_user_V_reg_313_pp0_iter11_reg <= tmp_user_V_reg_313_pp0_iter10_reg;
        tmp_user_V_reg_313_pp0_iter12_reg <= tmp_user_V_reg_313_pp0_iter11_reg;
        tmp_user_V_reg_313_pp0_iter13_reg <= tmp_user_V_reg_313_pp0_iter12_reg;
        tmp_user_V_reg_313_pp0_iter14_reg <= tmp_user_V_reg_313_pp0_iter13_reg;
        tmp_user_V_reg_313_pp0_iter15_reg <= tmp_user_V_reg_313_pp0_iter14_reg;
        tmp_user_V_reg_313_pp0_iter16_reg <= tmp_user_V_reg_313_pp0_iter15_reg;
        tmp_user_V_reg_313_pp0_iter17_reg <= tmp_user_V_reg_313_pp0_iter16_reg;
        tmp_user_V_reg_313_pp0_iter18_reg <= tmp_user_V_reg_313_pp0_iter17_reg;
        tmp_user_V_reg_313_pp0_iter19_reg <= tmp_user_V_reg_313_pp0_iter18_reg;
        tmp_user_V_reg_313_pp0_iter20_reg <= tmp_user_V_reg_313_pp0_iter19_reg;
        tmp_user_V_reg_313_pp0_iter21_reg <= tmp_user_V_reg_313_pp0_iter20_reg;
        tmp_user_V_reg_313_pp0_iter22_reg <= tmp_user_V_reg_313_pp0_iter21_reg;
        tmp_user_V_reg_313_pp0_iter23_reg <= tmp_user_V_reg_313_pp0_iter22_reg;
        tmp_user_V_reg_313_pp0_iter24_reg <= tmp_user_V_reg_313_pp0_iter23_reg;
        tmp_user_V_reg_313_pp0_iter25_reg <= tmp_user_V_reg_313_pp0_iter24_reg;
        tmp_user_V_reg_313_pp0_iter26_reg <= tmp_user_V_reg_313_pp0_iter25_reg;
        tmp_user_V_reg_313_pp0_iter27_reg <= tmp_user_V_reg_313_pp0_iter26_reg;
        tmp_user_V_reg_313_pp0_iter28_reg <= tmp_user_V_reg_313_pp0_iter27_reg;
        tmp_user_V_reg_313_pp0_iter29_reg <= tmp_user_V_reg_313_pp0_iter28_reg;
        tmp_user_V_reg_313_pp0_iter2_reg <= tmp_user_V_reg_313_pp0_iter1_reg;
        tmp_user_V_reg_313_pp0_iter30_reg <= tmp_user_V_reg_313_pp0_iter29_reg;
        tmp_user_V_reg_313_pp0_iter31_reg <= tmp_user_V_reg_313_pp0_iter30_reg;
        tmp_user_V_reg_313_pp0_iter3_reg <= tmp_user_V_reg_313_pp0_iter2_reg;
        tmp_user_V_reg_313_pp0_iter4_reg <= tmp_user_V_reg_313_pp0_iter3_reg;
        tmp_user_V_reg_313_pp0_iter5_reg <= tmp_user_V_reg_313_pp0_iter4_reg;
        tmp_user_V_reg_313_pp0_iter6_reg <= tmp_user_V_reg_313_pp0_iter5_reg;
        tmp_user_V_reg_313_pp0_iter7_reg <= tmp_user_V_reg_313_pp0_iter6_reg;
        tmp_user_V_reg_313_pp0_iter8_reg <= tmp_user_V_reg_313_pp0_iter7_reg;
        tmp_user_V_reg_313_pp0_iter9_reg <= tmp_user_V_reg_313_pp0_iter8_reg;
        valOut_data_1_reg_360 <= valOut_data_1_fu_243_p3;
        valOut_data_1_reg_360_pp0_iter28_reg <= valOut_data_1_reg_360;
        valOut_data_1_reg_360_pp0_iter29_reg <= valOut_data_1_reg_360_pp0_iter28_reg;
        valOut_data_1_reg_360_pp0_iter30_reg <= valOut_data_1_reg_360_pp0_iter29_reg;
        valOut_data_1_reg_360_pp0_iter31_reg <= valOut_data_1_reg_360_pp0_iter30_reg;
        valOut_data_reg_348 <= grp_fu_149_p1;
        valOut_data_reg_348_pp0_iter23_reg <= valOut_data_reg_348;
        valOut_data_reg_348_pp0_iter24_reg <= valOut_data_reg_348_pp0_iter23_reg;
        valOut_data_reg_348_pp0_iter25_reg <= valOut_data_reg_348_pp0_iter24_reg;
        valOut_data_reg_348_pp0_iter26_reg <= valOut_data_reg_348_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_86_p9 == 1'd1))) begin
        tmp_dest_V_reg_328 <= inStream_TDEST_int_regslice;
        tmp_id_V_reg_323 <= inStream_TID_int_regslice;
        tmp_keep_V_reg_303 <= inStream_TKEEP_int_regslice;
        tmp_last_V_reg_318 <= inStream_TLAST_int_regslice;
        tmp_strb_V_reg_308 <= inStream_TSTRB_int_regslice;
        tmp_user_V_reg_313 <= inStream_TUSER_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dest_V_reg_328_pp0_iter1_reg <= tmp_dest_V_reg_328;
        tmp_id_V_reg_323_pp0_iter1_reg <= tmp_id_V_reg_323;
        tmp_keep_V_reg_303_pp0_iter1_reg <= tmp_keep_V_reg_303;
        tmp_last_V_reg_318_pp0_iter1_reg <= tmp_last_V_reg_318;
        tmp_strb_V_reg_308_pp0_iter1_reg <= tmp_strb_V_reg_308;
        tmp_user_V_reg_313_pp0_iter1_reg <= tmp_user_V_reg_313;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_86_p9 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_149_ce = 1'b1;
    end else begin
        grp_fu_149_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_ce = 1'b1;
    end else begin
        grp_fu_155_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_86_p9 == 1'd1))) begin
        inStream_TDATA_blk_n = inStream_TVALID_int_regslice;
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_86_p9 == 1'd1))) begin
        inStream_TREADY_int_regslice = 1'b1;
    end else begin
        inStream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter33 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)))) begin
        outStream_TDATA_blk_n = outStream_TREADY_int_regslice;
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        outStream_TVALID_int_regslice = 1'b1;
    end else begin
        outStream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln16_fu_238_p2 = (tmp_2_reg_355 & or_ln16_fu_232_p2);

assign and_ln17_fu_285_p2 = (tmp_4_reg_366 & or_ln17_fu_279_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((outStream_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((inStream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_86_p9 == 1'd1)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & ((outStream_TREADY_int_regslice == 1'b0) | (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((outStream_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((inStream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_86_p9 == 1'd1)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & ((outStream_TREADY_int_regslice == 1'b0) | (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((outStream_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((inStream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_86_p9 == 1'd1)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & ((outStream_TREADY_int_regslice == 1'b0) | (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((outStream_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1)) | ((inStream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_86_p9 == 1'd1)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & ((outStream_TREADY_int_regslice == 1'b0) | (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((inStream_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_86_p9 == 1'd1));
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage0_iter32 = ((outStream_TREADY_int_regslice == 1'b0) | (regslice_both_outStream_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state34_pp0_stage0_iter33 = (outStream_TREADY_int_regslice == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready_pp0_iter32_reg = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln16_fu_203_p1 = valOut_data_reg_348_pp0_iter26_reg;

assign bitcast_ln17_fu_250_p1 = valOut_data_1_reg_360_pp0_iter31_reg;

assign grp_fu_152_p0 = inStream_TDATA_int_regslice;

assign icmp_ln16_1_fu_226_p2 = ((trunc_ln16_fu_216_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_220_p2 = ((tmp_1_fu_206_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln17_1_fu_273_p2 = ((trunc_ln17_fu_263_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_267_p2 = ((tmp_3_fu_253_p4 != 8'd255) ? 1'b1 : 1'b0);

assign inStream_TREADY = regslice_both_inStream_V_data_V_U_ack_in;

assign or_ln16_fu_232_p2 = (icmp_ln16_fu_220_p2 | icmp_ln16_1_fu_226_p2);

assign or_ln17_fu_279_p2 = (icmp_ln17_fu_267_p2 | icmp_ln17_1_fu_273_p2);

assign outStream_TDATA_int_regslice = ((and_ln17_fu_285_p2[0:0] == 1'b1) ? 32'd3212836864 : bitcast_ln17_fu_250_p1);

assign outStream_TVALID = regslice_both_outStream_V_data_V_U_vld_out;

assign tmp_1_fu_206_p4 = {{bitcast_ln16_fu_203_p1[30:23]}};

assign tmp_3_fu_253_p4 = {{bitcast_ln17_fu_250_p1[30:23]}};

assign tmp_nbreadreq_fu_86_p9 = inStream_TVALID_int_regslice;

assign trunc_ln16_fu_216_p1 = bitcast_ln16_fu_203_p1[22:0];

assign trunc_ln17_fu_263_p1 = bitcast_ln17_fu_250_p1[22:0];

assign valOut_data_1_fu_243_p3 = ((and_ln16_fu_238_p2[0:0] == 1'b1) ? 32'd1065353216 : valOut_data_reg_348_pp0_iter26_reg);


reg find_kernel_block = 0;
// synthesis translate_off
`include "doGain_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //doGain

